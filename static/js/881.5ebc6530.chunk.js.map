{"version":3,"file":"static/js/881.5ebc6530.chunk.js","mappings":"oOACA,EAA6B,2BAA7B,EAAgE,sBAAhE,EAA4F,oBAA5F,EAA6H,2BAA7H,EAAqK,2BAArK,EAAgN,8B,6DC+FhN,EAvFe,WAAO,IAAD,IACnB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,oBACfF,EAAaG,IAAI,gBADF,QAEfC,KAAKC,MAAMC,aAAaC,QAAQ,iBAFjB,QAGf,GACIC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,SAAO,IAE7BC,EAAAA,EAAAA,YAAU,WACJF,EAAcG,QAChBH,EAAcG,SAAU,EAGrBX,GAKL,iBAAC,sGAEGJ,GAAa,GAFhB,UAG0BgB,EAAAA,EAAAA,IAASZ,GAHnC,gBAGWa,EAHX,EAGWA,KACRnB,EAASmB,EAAKC,SAJjB,gDAMGC,QAAQC,IAAR,MANH,yBAQGpB,GAAa,GARhB,2EAAD,GAJEqB,EAAAA,OAAAA,KAAY,4CAef,GAAE,CAACjB,IAYJ,OACE,gCACE,kBAAMkB,UAAWC,EAAgBC,SAZf,SAAAC,GACpBA,EAAEC,iBACF,IAAQC,EAAUF,EAAEG,OAAOxB,YAAnBuB,MACRxB,EACiC,KAA/BwB,EAAME,OAAOC,cACT,CAAEC,MAAOJ,EAAME,OAAOC,eACtB,CAAC,EAER,EAIG,WACE,kBACEE,aAAc5B,EACd6B,KAAK,OACLC,KAAK,cACLZ,UAAWC,EACXY,YAAY,yBAEd,oBAAQF,KAAK,SAASX,UAAWC,EAAjC,WACE,SAAC,MAAD,IADF,eAKDxB,GACC,SAACqC,EAAA,EAAD,KAEA,iCACE,eAAId,UAAWC,EAAf,SACGnB,EAAW,+BACgBA,EADhB,KAER,+BAGLP,IACC,eAAIyB,UAAWC,EAAf,SACG1B,EAAMwC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACT,eAAajB,UAAWC,EAAxB,UACE,UAAC,KAAD,CAASiB,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMhC,GAArC,WACE,SAAC,MAAD,IACC6B,MAHID,EADA,WAcxB,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Movies_searchForm__J4-xw\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"searchList\":\"Movies_searchList__acL74\",\"searchItem\":\"Movies_searchItem__mdXQx\",\"searchCaption\":\"Movies_searchCaption__iy7AS\"};","import React, { useState, useEffect } from 'react';\nimport css from './Movies.module.css';\nimport { getMovie } from 'services/movie-api';\nimport { BiChevronRight, BiSearch } from 'react-icons/bi';\nimport Loader from 'components/Loader/Loader';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { Notify } from 'notiflix';\n\nconst Movies = () => {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery =\n    searchParams.get('query') ??\n    JSON.parse(localStorage.getItem('query')) ??\n    '';\n  const location = useLocation();\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    if (!searchQuery) {\n      Notify.info(\"The search string should\\n't be an empty \");\n      return;\n    }\n\n    (async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await getMovie(searchQuery);\n        setMovie(data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [searchQuery]);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.searchQuery;\n    setSearchParams(\n      value.trim().toLowerCase() !== ''\n        ? { query: value.trim().toLowerCase() }\n        : {}\n    );\n  };\n\n  return (\n    <section>\n      <form className={css.searchForm} onSubmit={handlerSubmit}>\n        <input\n          defaultValue={searchQuery}\n          type=\"text\"\n          name=\"searchQuery\"\n          className={css.input}\n          placeholder=\"I'm looking for... \"\n        />\n        <button type=\"submit\" className={css.btn}>\n          <BiSearch />\n          Search\n        </button>\n      </form>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <h3 className={css.searchCaption}>\n            {searchQuery\n              ? `Search results for: '${searchQuery}'`\n              : 'Please enter a movie title'}\n          </h3>\n\n          {movie && (\n            <ul className={css.searchList}>\n              {movie.map(({ id, original_title }) => (\n                <li key={id} className={css.searchItem}>\n                  <NavLink to={`${id}`} state={{ from: location }}>\n                    <BiChevronRight />\n                    {original_title}\n                  </NavLink>\n                </li>\n              ))}\n            </ul>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movie","setMovie","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","JSON","parse","localStorage","getItem","location","useLocation","isFirstRender","useRef","useEffect","current","getMovie","data","results","console","log","Notify","className","css","onSubmit","e","preventDefault","value","target","trim","toLowerCase","query","defaultValue","type","name","placeholder","Loader","map","id","original_title","to","state","from"],"sourceRoot":""}